import { foldl } from core
import { ceil, floor } from _internal
import { add } from operators


export ceil


export floor


smallest =
    (x, y) => x < y ? x : y


largest =
    (x, y) => x > y ? x : y


export min = foldl(?, smallest)


export max = foldl(?, largest)


export sum = foldl(?, add, 0)


export func gcd(x: Int, y: Int): Int {
    while y != 0 {
        (x, y) = (y, x % y)
    }
    return x
}
